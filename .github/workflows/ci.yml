name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  HUSKY: "0" # DonÂ´t run Husky hooks on CI

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Install dependencies
        run: |
          npm pkg delete scripts.prepare # disable husky
          yarn install --frozen-lockfile

      - name: Save node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - name: Run astro check
        run: yarn astro check

      - name: Run Lint
        run: yarn lint

      - name: Check formatting
        run: yarn format:check

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v3
        with:
          name: site-build
          path: dist/
          if-no-files-found: error
          retention-days: 5

  test:
    needs:
      - build
    name: Test
    runs-on: ubuntu-latest
    env:
      BASE_URL: http://localhost:3000
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - uses: actions/download-artifact@v3
        with:
          name: site-build
          path: ./dist

      - name: Restore node_modules cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        run: |
          npm pkg delete scripts.prepare # disable husky
          yarn install --frozen-lockfile

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          start: yarn preview
          wait-on: "${{ env.BASE_URL }}"

      - name: Run Lighthouse test
        uses: treosh/lighthouse-ci-action@v9
        with:
          configPath: .lighthouserc.cjs
          uploadArtifacts: true
  publish:
    needs:
      - test
    name: Publish to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: site-build
          path: ./dist

      - name: Semantic Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19
          extra_plugins: |
            @semantic-release/changelog@^6.0.2
            @semantic-release/git@^10.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          projectName: astro-demo
          directory: ./dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
